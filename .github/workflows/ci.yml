name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest spotipy qbittorrent-api requests beautifulsoup4 python-dotenv
          if [ "$RUNNER_OS" == "Linux" ]; then
            pip install pystray Pillow
          elif [ "$RUNNER_OS" == "macOS" ]; then
            pip install rumps pync
          fi
      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

  build-linux:
    name: Build Linux (Arch Linux AArch64) Artifact
    needs: test
    runs-on: [self-hosted, linux, arm64]
    strategy:
      matrix:
        python-version: ['3.9']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.github/workflows/ci.yml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PyInstaller build directory
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-pyinstaller-build-${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller spotipy qbittorrent-api requests beautifulsoup4 python-dotenv setuptools wheel pystray Pillow

      - name: Run PyInstaller (Linux AArch64)
        run: |
          python -m PyInstaller --noconfirm --onefile --windowed spotify-torrent-menu.py

      - name: Archive Linux executable
        uses: actions/upload-artifact@v4
        with:
          name: spotify-syncer-linux
          path: dist/spotify-torrent-menu

  build-macos:
    name: Build macOS Artifact
    needs: test
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.9']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller spotipy qbittorrent-api requests beautifulsoup4 python-dotenv setuptools wheel rumps pync

      - name: Run PyInstaller (macOS)
        run: |
          python -m PyInstaller --noconfirm --onefile --windowed spotify-torrent-menu.py

      - name: Archive macOS executable
        uses: actions/upload-artifact@v4
        with:
          name: spotify-syncer-macos
          path: dist/spotify-torrent-menu.app

  release:
    needs: [build-linux, build-macos] # Ensure builds succeed before releasing
    runs-on: ubuntu-latest # Release can run on a single OS
    if: startsWith(github.ref, 'refs/tags/v') # Only run on version tags

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts # Download all artifacts to a directory

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Zip macOS app bundle
        run: |
          echo "Zipping macOS app bundle..."
          ls -R artifacts
          cd artifacts/spotify-syncer-macos
          zip -r ../../spotify-torrent-menu.app.zip spotify-torrent-menu.app
          cd ../..
          echo "Zipping complete. File should be at workspace root:"
          ls spotify-torrent-menu.app.zip

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/spotify-syncer-linux/spotify-torrent-menu
          asset_name: spotify-syncer-linux
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: spotify-torrent-menu.app.zip # Path to the zip file created in the previous step
          asset_name: spotify-syncer-macos.zip
          asset_content_type: application/zip
